
FYS Trading Bot, kripto para piyasalarında otomatik alım-satım stratejileri yürüten, API entegrasyonu, teknik analiz indikatörleri ve kullanıcı dostu yapılandırma seçenekleri sunan Python tabanlı bir ticaret botudur. FYS Trading Bot, kullanıcıların DCA ve Grid gibi popüler stratejileri uygulayabilmesini sağlar ve Docker desteğiyle hızlıca kurulup çalıştırılabilir.

Özellikler
DCA (Dollar Cost Averaging) Bot: Zaman aralıklarına göre belirli miktarlarda kripto alımını otomatik olarak gerçekleştirir.
Grid Bot: Fiyat seviyelerine göre alım-satım işlemleri gerçekleştirerek volatil piyasa hareketlerinden kar elde etmeyi amaçlar.
Teknik İndikatörler: RSI, MACD, Bollinger Bantları gibi klasik indikatörler içerir.
API Entegrasyonu: ccxt kütüphanesiyle Binance gibi kripto borsalarına kolayca bağlanır.
Cüzdan Yönetimi: Cüzdan bakiyelerini güncel olarak takip eder ve gösterir.
Docker Uyumluluğu: Kolay dağıtım ve hızlı kurulum için Docker desteği sunar.
Gereksinimler
Python: 3.8 veya üzeri
Docker: (Opsiyonel) Eğer Docker üzerinden çalıştırmak isteniyorsa
Kripto Borsası API Anahtarları: Örneğin, Binance API bilgileri
1. Kurulum
1.1. Bağımlılıkları Yükleyin
Proje gereksinimlerini yüklemek için, projenin kök dizininde aşağıdaki komutu çalıştırın:

bash
Kodu kopyala
pip install -r requirements.txt
1.2. Çevre Değişkenlerini Ayarlayın
API anahtarlarınızı güvenli bir şekilde ayarlamak için app/config.py dosyasını düzenleyin veya çevre değişkenleriyle çalışın. Örnek bir yapılandırma için config.py aşağıdaki gibi olabilir:

python
Kodu kopyala
import os

class Config:
    API_KEYS = {
        "binance": {
            "api_key": os.getenv("BINANCE_API_KEY"),
            "secret": os.getenv("BINANCE_SECRET_KEY"),
        }
    }
    DEFAULT_SYMBOL = 'BTC/USDT'
    DEFAULT_EXCHANGE = 'binance'
Not: API bilgilerini doğrudan koda yazmak yerine güvenlik nedeniyle çevre değişkenleriyle kullanmayı tercih edin.

1.3. Docker ile Çalıştırma (Opsiyonel)
FYS Trading Bot'u Docker konteynerı olarak çalıştırmak için aşağıdaki adımları izleyin:

Docker'ın kurulu olduğundan emin olun.

Aşağıdaki komutla Docker konteynerını başlatın:

bash
Kodu kopyala
docker-compose up --build
Docker başarıyla çalıştığında, API'yi http://localhost:8000/docs adresinden test edebilirsiniz.

2. Kullanım
FYS Trading Bot'un API uç noktalarını http://localhost:8000/docs adresinde bulabilirsiniz. Bu dokümantasyon, botları başlatma, durdurma ve cüzdan bilgilerini sorgulama gibi işlevler için tüm API uç noktalarını içerir.

2.1. Örnek API Kullanımları
DCA Botu Başlatma:

URL: /trade/dca/
Parametreler: symbol, investment_amount, interval_hours
Örnek: DCA botunu 1 saatlik aralıklarla çalıştırmak için bu uç noktayı kullanabilirsiniz.
Grid Botu Başlatma:

URL: /trade/grid/
Parametreler: symbol, grid_levels, grid_size
Açıklama: Grid botunu, belirli fiyat seviyelerinde otomatik alım-satım yapmak için başlatır.
Cüzdan Bakiyesi Görüntüleme:

URL: /wallet/
Açıklama: Kullanıcının cüzdanındaki güncel kripto varlıkları ve bakiyeleri görüntüler.
3. Geliştirme
3.1. Proje Yapısı
Projenin ana yapısı aşağıdaki gibidir:

bash
Kodu kopyala
fys_trading_bot/
│
├── app/                    # Ana uygulama dosyaları
│   ├── __init__.py
│   ├── main.py             # Uygulama başlangıç dosyası
│   ├── config.py           # Yapılandırma ve API anahtarları
│   ├── routes/             # API rotaları
│   ├── services/           # Bot servisleri ve iş mantığı
│   └── templates/          # HTML şablon dosyaları
│
├── tests/                  # Test dosyaları
├── requirements.txt        # Python bağımlılıkları
├── Dockerfile              # Docker yapılandırma dosyası
├── docker-compose.yml      # Docker Compose dosyası
└── README.md               # Proje genel açıklaması
3.2. Ana Dosyaların Açıklamaları
app/main.py: FastAPI uygulamasını başlatır ve API rotalarını yükler.
app/routes/trading.py: Bot işlemleri için API uç noktalarını içerir.
app/routes/wallet.py: Cüzdan bakiyesini sorgulamak için API uç noktası sağlar.
app/services/bots.py: DCA ve Grid botlarının mantığını içerir.
app/services/indicators.py: Teknik analiz indikatörlerini hesaplar.
Dockerfile: Projenin Docker üzerinde çalıştırılması için gerekli komutları içerir.
docker-compose.yml: Docker Compose yapılandırması, Docker konteynerını kolayca çalıştırmak için kullanılır.
4. Test ve Geriye Dönük Test (Backtesting)
4.1. Testler
Projenin düzgün çalıştığından emin olmak için tests klasöründe yer alan testleri çalıştırın. Örneğin:

bash
Kodu kopyala
pytest tests/
4.2. Geriye Dönük Test (Backtesting)
FYS Trading Bot için geliştirilmiş yeni stratejilerin etkinliğini değerlendirmek amacıyla geriye dönük testler uygulayın. Örnek olarak, fiyat verilerini bir CSV dosyasından yükleyebilir ve her bir stratejiyi geçmiş verilerle test edebilirsiniz.

5. Katkıda Bulunma
FYS Trading Bot projesine katkıda bulunmak için aşağıdaki adımları takip edin:

Projeyi fork edin.
Yeni bir branch oluşturun (feature/my-feature).
Pull request gönderin.
Lütfen katkı yaparken kod stiline ve PEP8 standartlarına dikkat edin.

Lisans
Bu proje MIT Lisansı altında lisanslanmıştır.

